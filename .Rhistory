filter(Speaker_gloss == element$Speaker_gloss)
min_age <- ages %>% filter(Speaker == element$Speaker & age == min(age))
degrees <- actual_global_degree %>%
filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
group_by(Speaker, age) %>%
summarise(PAT_val = median(degree),
PAT_val_m = mean(degree))
# need to add some code in that accounts for words that would not connect to any earlier-acquired words
missing_degrees <- degrees %>%
filter(variable == "age") %>%
group_by(gloss1) %>%
filter(min(value)) %>%
mutate(add_vals = ifelse(value > min_age, T, F))
known_degree_list <- list(missing_degrees)    # should be degrees
})
known_words_degree_actual <-lapply(violet_list, FUN = function(element) {        # should be gloss_list
connections <- connected_degree_actual_melted_check %>%                        ## remove _check
filter(Speaker_gloss == element$Speaker_gloss)
min_age <- ages %>% filter(Speaker == element$Speaker & age == min(age))
degrees <- actual_global_degree %>%
filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
group_by(Speaker, age) %>%
summarise(PAT_val = median(degree),
PAT_val_m = mean(degree))
# need to add some code in that accounts for words that would not connect to any earlier-acquired words
missing_degrees <- degrees %>%
#filter(variable == "age") %>%
group_by(gloss1) %>%
filter(min(age)) %>%
mutate(add_vals = ifelse(value > min_age, T, F))
known_degree_list <- list(missing_degrees)    # should be degrees
})
View(known_words_degree_actual)
known_words_degree_actual <-lapply(violet_list, FUN = function(element) {        # should be gloss_list
connections <- connected_degree_actual_melted_check %>%                        ## remove _check
filter(Speaker_gloss == element$Speaker_gloss)
min_age <- ages %>% filter(Speaker == element$Speaker & age == min(age))
degrees <- actual_global_degree %>%
filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
group_by(Speaker, age) %>%
summarise(PAT_val = median(degree),
PAT_val_m = mean(degree))
# need to add some code in that accounts for words that would not connect to any earlier-acquired words
missing_degrees <- degrees %>%
#filter(variable == "age") %>%
ungroup() %>%
group_by(gloss1) %>%
filter(min(age)) %>%
mutate(add_vals = ifelse(age > min_age, T, F))
known_degree_list <- list(missing_degrees)    # should be degrees
})
known_words_degree_actual <-lapply(violet_list, FUN = function(element) {        # should be gloss_list
connections <- connected_degree_actual_melted_check %>%                        ## remove _check
filter(Speaker_gloss == element$Speaker_gloss)
min_age <- ages %>% filter(Speaker == element$Speaker & age == min(age))
degrees <- actual_global_degree %>%
filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
group_by(Speaker, age) %>%
summarise(PAT_val = median(degree),
PAT_val_m = mean(degree))
# need to add some code in that accounts for words that would not connect to any earlier-acquired words
missing_degrees <- actual_global_degree %>%
filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
group_by(Speaker, age, gloss1) %>%
#filter(variable == "age") %>%
filter(min(age)) %>%
mutate(add_vals = ifelse(age > min_age, T, F))
known_degree_list <- list(missing_degrees)    # should be degrees
})
known_words_degree_actual <-lapply(violet_list, FUN = function(element) {        # should be gloss_list
connections <- connected_degree_actual_melted_check %>%                        ## remove _check
filter(Speaker_gloss == element$Speaker_gloss)
min_age <- ages %>% filter(Speaker == element$Speaker & age == min(age))
degrees <- actual_global_degree %>%
filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
group_by(Speaker, age) %>%
summarise(PAT_val = median(degree),
PAT_val_m = mean(degree))
# need to add some code in that accounts for words that would not connect to any earlier-acquired words
missing_degrees <- actual_global_degree %>%
filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
group_by(Speaker, age, gloss1) %>%
#filter(variable == "age") %>%
filter(age == min(age)) %>%
mutate(add_vals = ifelse(age > min_age, T, F))
known_degree_list <- list(missing_degrees)    # should be degrees
})
known_words_degree_actual <-lapply(violet_list, FUN = function(element) {        # should be gloss_list
connections <- connected_degree_actual_melted_check %>%                        ## remove _check
filter(Speaker_gloss == element$Speaker_gloss)
min_age <- ages %>% filter(Speaker == element$Speaker & age == min(age))
degrees <- actual_global_degree %>%
filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
group_by(Speaker, age) %>%
summarise(PAT_val = median(degree),
PAT_val_m = mean(degree))
# need to add some code in that accounts for words that would not connect to any earlier-acquired words
missing_degrees <- actual_global_degree %>%
filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
group_by(Speaker, age, gloss1) %>%
filter(age == min(age)) #%>%
#mutate(add_vals = ifelse(age > min_age, T, F))
known_degree_list <- list(missing_degrees)    # should be degrees
})
mean_degree_full_actual <- melt(known_words_degree_actual)
View(known_words_degree_actual)
known_words_degree_actual <-lapply(violet_list, FUN = function(element) {        # should be gloss_list
connections <- connected_degree_actual_melted_check %>%                        ## remove _check
filter(Speaker_gloss == element$Speaker_gloss)
min_age <- ages %>% filter(Speaker == element$Speaker & age == min(age))
degrees <- actual_global_degree %>%
filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
group_by(Speaker, age) %>%
summarise(PAT_val = median(degree),
PAT_val_m = mean(degree))
# need to add some code in that accounts for words that would not connect to any earlier-acquired words
# missing_degrees <- actual_global_degree %>%
#   filter(gloss1 %in% connections$known_word & (age < element$AOP) & Speaker == element$Speaker) %>%
#   group_by(Speaker, age, gloss1) %>%
#   mutate(add_vals = ifelse(age > min_age, T, F)) %>%
#   filter(add_vals == T)
known_degree_list <- list(degrees)    # should be degrees
})
mean_degree_full_actual <- melt(known_words_degree_actual) %>%
group_by(L1, variable) %>%
mutate(rn = row_number()) %>%
pivot_wider(names_from = variable, values_from = value) %>%
separate(L1, into = c("remove", "gloss1"), sep = "_") %>%
dplyr::select(-remove, -L2, -rn) %>%
left_join(AOP_summ_red)%>%
mutate(data_type = "actual")
View(regression_data)
View(regression_data)
mean_degree_full_actual <- melt(known_words_degree_actual) %>%
group_by(L1, variable) %>%
mutate(rn = row_number()) %>%
pivot_wider(names_from = variable, values_from = value) %>%
separate(L1, into = c("remove", "gloss1"), sep = "_") %>%
dplyr::select(-remove, -L2, -rn)
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
group_by(Speaker, gloss1) %>%
filter(age == min(age))
View(mean_degree_full_actual_missing)
min_ages <- ages %>% group_by(Speaker) %>% summarise(min_age = min(age)) %>%
mutate(min_age = as.numeric(min_age))
View(min_ages)
missing_data <- vector("list", length(2117))
missing_data <- vector("list", length(2117))
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
filter(age == min(age)) %>%
mutate(add_vals = ifelse(age > min_ages$age[which(min_ages$Speaker == i)], T, F))
missing_data[[i]] <- mean_degree_full_actual_missing
}
View(min_ages)
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
filter(age == min(age)) #%>%
#mutate(add_vals = ifelse(age > min_ages$age[which(min_ages$Speaker == i)], T, F))
missing_data[[i]] <- mean_degree_full_actual_missing
}
View(missing_data)
melt(missing_data)
missing <- melt(missing_data)
missing_data[[1]]
missing_data[[2]]
missing_data <- vector("list", length(2117))
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
filter(age == min(age)) %>%
filter(age > min_ages$age[which(min_ages$Speaker == i)])
#mutate(add_vals = ifelse(age > min_ages$age[which(min_ages$Speaker == i)], T, F))
missing_data[[i]] <- mean_degree_full_actual_missing
}
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
filter(age == min(age)) %>%
filter(age > (min_ages$age[which(min_ages$Speaker == i)]))
#mutate(add_vals = ifelse(age > min_ages$age[which(min_ages$Speaker == i)], T, F))
missing_data[[i]] <- mean_degree_full_actual_missing
}
min_ages$age[which(min_ages$Speaker == "Violet")]
min_ages$min_age[which(min_ages$Speaker == "Violet")]
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
filter(age == min(age)) %>%
filter(age > (min_ages$min_age[which(min_ages$Speaker == i)]))
#mutate(add_vals = ifelse(age > min_ages$age[which(min_ages$Speaker == i)], T, F))
missing_data[[i]] <- mean_degree_full_actual_missing
}
View(missing_data)
missing_data[[2]]
id <- c(rep(1,5), rep(2,5), rep(3,4), rep(4,2), rep(5, 1))
year <- c(1990,1991,1992,1993,1994,1990,1991,1992,1993,1994,1990,1991,1992,1994,1990,1994, 1994)
gender <- c(rep("female", 5), rep("male", 5), rep("male", 4), rep("female", 2), rep("male", 1))
dat <- data.frame(id,year,gender)
View(dat)
View(AOP_summ)
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)]))
missing_data[[i]] <- mean_degree_full_actual_missing
}
missing_data[[2]]
missing_data <- vector("list", length(2117))
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(is.na(age) & !(age %in% AOP_summ$AOP[which(Speaker == i)]), T, F))
missing_data[[i]] <- mean_degree_full_actual_missing
}
missing_data[[2]]
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(Speaker == i)]), T, F))
missing_data[[i]] <- mean_degree_full_actual_missing
}
missing_data[[2]]
View(ages)
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% ages$age[which(Speaker == i)]), T, F))
missing_data[[i]] <- mean_degree_full_actual_missing
}
missing_data[[2]]
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F))
missing_data[[i]] <- mean_degree_full_actual_missing
}
missing_data[[2]]
missing_data <- vector("list", length(2117))
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) %>%
filter(remove == T) %>%
mutate(PAT_val = 0,
PAT_val_m = 0) %>%
fill(gloss1, Speaker)
missing_data[[i]] <- mean_degree_full_actual_missing
}
missing_data[[2]]
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) %>%
# filter(remove == T) %>%
mutate(PAT_val = 0,
PAT_val_m = 0) %>%
fill(gloss1, Speaker)
missing_data[[i]] <- mean_degree_full_actual_missing
}
missing_data[[2]]
missing_data <- vector("list", length(2117))
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) %>%
# filter(remove == T) %>%
mutate(PAT_val = 0,
PAT_val_m = 0) %>%
fill(gloss1, .direction = "down")
missing_data[[i]] <- mean_degree_full_actual_missing
}
missing_data[[2]]
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) #%>%
# filter(remove == T) %>%
# mutate(PAT_val = 0,
#        PAT_val_m = 0) %>%
# fill(gloss1, .direction = "down")
missing_data[[i]] <- mean_degree_full_actual_missing
}
missing_data[[2]]
View(missing_data)
missing_data <- melt(missing_data)
View(missing_data)
missing_df_actual <- missing_data_actual[c(1:2117)]
missing_data_actual <- vector("list", length(2117))
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) #%>%
# filter(remove == T) %>%
mutate(PAT_val = 0,
PAT_val_m = 0) %>%
# fill(gloss1, .direction = "down")
missing_data_actual[[i]] <- mean_degree_full_actual_missing
}
missing_df_actual <- missing_data_actual[c(1:2117)]
View(missing_df_actual)
missing_data_argh <- melt(missing_df_actual)
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) #%>%
# filter(remove == T) %>%
mutate(PAT_val = 0,
PAT_val_m = 0) %>%
# fill(gloss1, .direction = "down")
missing_data_actual[[i]] <- mean_degree_full_actual_missing
}
missing_data_actual <- vector("list", length(2117))
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) #%>%
# filter(remove == T) %>%
# mutate(PAT_val = 0,
#        PAT_val_m = 0) %>%
# fill(gloss1, .direction = "down")
missing_data_actual[[i]] <- mean_degree_full_actual_missing
}
missing_df_actual <- missing_data_actual[c(1:2)]
missing_data_argh <- melt(missing_df_actual)
missing_data_actual[[2]]
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) #%>%
filter(remove == T) #%>%
# mutate(PAT_val = 0,
#        PAT_val_m = 0) %>%
# fill(gloss1, .direction = "down")
missing_data_actual[[i]] <- mean_degree_full_actual_missing
}
missing_data_actual[[2]]
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) #%>%
filter(remove == T) #%>%
# mutate(PAT_val = 0,
#        PAT_val_m = 0) %>%
# fill(gloss1, .direction = "down")
missing_data_actual[[i]] <- mean_degree_full_actual_missing
}
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), "y", "n")) #%>%
filter(remove == "y") #%>%
# mutate(PAT_val = 0,
#        PAT_val_m = 0) %>%
# fill(gloss1, .direction = "down")
missing_data_actual[[i]] <- mean_degree_full_actual_missing
}
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), "y", "n")) #%>%
filter(remove == "y") #%>%
# mutate(PAT_val = 0,
#        PAT_val_m = 0) %>%
# fill(gloss1, .direction = "down")
missing_data_actual[[i]] <- mean_degree_full_actual_missing
}
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), "y", "n")) %>%
filter(remove == "y") #%>%
# mutate(PAT_val = 0,
#        PAT_val_m = 0) %>%
# fill(gloss1, .direction = "down")
missing_data_actual[[i]] <- mean_degree_full_actual_missing
}
missing_data_actual[[2]]
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) %>%
filter(remove != T) #%>%
# mutate(PAT_val = 0,
#        PAT_val_m = 0) %>%
# fill(gloss1, .direction = "down")
missing_data_actual[[i]] <- mean_degree_full_actual_missing
}
missing_data_actual[[2]]
missing_df_actual <- missing_data_actual[c(1:2)]
missing_data_argh <- melt(missing_df_actual)
View(missing_df_actual)
missing_df_actual <- missing_data_actual
missing_data_argh <- melt(missing_df_actual)
missing_df_actual <- missing_data_actual[2]
missing_data_argh <- melt(missing_df_actual)
View(missing_data_argh)
missing_data_actual <- vector("list", length(2117))
for (i in unique(mean_degree_full_actual$Speaker)) {
mean_degree_full_actual_missing <- mean_degree_full_actual %>%
filter(Speaker == i) %>%
group_by(gloss1) %>%
#filter(age == min(age)) %>%
#filter(age > (min_ages$min_age[which(min_ages$Speaker == i)])) %>%
complete(gloss1, age = (min_ages$min_age[which(min_ages$Speaker == i)]):(AOP_summ$AOP[which(Speaker == i & gloss1 == gloss1)])) %>%
mutate(remove = ifelse(!(age %in% AOP_summ$AOP[which(AOP_summ$Speaker == i)]), T, F)) %>%
filter(remove != T) #%>%
mutate(PAT_val = ifelse(is.na(PAT_val), 0, PAT_val),
PAT_val_m = ifelse(is.na(PAT_val_m), 0, PAT_val_m)) %>%
fill(Speaker, .direction = "down")
missing_data_actual[[i]] <- mean_degree_full_actual_missing
}
missing_data_actual[[2]]
missing_df_actual <- missing_data_actual[2]
missing_data_argh <- melt(missing_df_actual)
missing_df_actual <- missing_data_actual[2]
missing_data_argh <- melt(missing_df_actual)
missing_df_actual <- missing_data_actual[1:2]
missing_data_argh <- melt(missing_df_actual)
missing_df_actual <- missing_data_actual[c(2:81)]
missing_data_argh <- melt(missing_df_actual)
missing_df_actual <- missing_data_actual[1]
missing_data_argh <- melt(missing_df_actual)
missing_df_actual <- missing_data_actual[c(1:2)]
missing_data_argh <- melt(missing_df_actual)
length(missing_data_actual)
missing_df_actual <- missing_data_actual[1]
missing_data_argh <- melt(missing_df_actual)
missing_df_actual <- missing_data_actual[[2]]
missing_df_actual <- missing_data_actual[2]
missing_data_argh <- melt(missing_df_actual)
length(missing_df_actual)
length(missing_data_actual)
missing_data_argh <- melt(missing_data_actual)
